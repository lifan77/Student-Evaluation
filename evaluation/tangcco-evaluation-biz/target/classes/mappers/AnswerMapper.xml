<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tangcco.evaluation.dao.AnswerMapper">
    <resultMap id="BaseResultMap" type="com.tangcoo.evaluation.pojo.Answer">
        <id column="answer_id" jdbcType="INTEGER" property="answerId"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="detail" jdbcType="VARCHAR" property="detail"/>
        <result column="total_score" jdbcType="INTEGER" property="totalScore"/>
        <result column="opinion" jdbcType="VARCHAR" property="opinion"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="class_id" jdbcType="INTEGER" property="classId"/>
        <result column="teacher_id" jdbcType="INTEGER" property="teacherId"/>
        <result column="paper_id" jdbcType="INTEGER" property="paperId"/>
    </resultMap>
    <select id="queryCount" resultType="int">
        SELECT COUNT(1) FROM (
                                 SELECT COUNT(1) FROM (
                                                          SELECT * FROM answer WHERE create_time LIKE CONCAT(#{mouth},'%')
                                                      ) AS linshi
                                 GROUP BY DATE_FORMAT( linshi.create_time, "%Y-%m-%d" )
                             ) AS ls
    </select>
    <select id="queryTeacherOrderList" resultType="map">
        SELECT te.teacher_id,te.name,AVG(total_score) score FROM answer AS an
        INNER JOIN teacher te
        WHERE an.create_time LIKE CONCAT(#{mouth},'%') AND an.teacher_id=te.teacher_id
        GROUP BY an.teacher_id
        <if test="status=='false'">
            ORDER BY AVG(total_score)
        </if>
        <if test="status=='true'">
            ORDER BY AVG(total_score) DESC
        </if>
    </select>
    <select id="queryAllTeacherOrderList" resultType="map">
        SELECT te.teacher_id,te.name,AVG(total_score) score FROM answer AS an
        INNER JOIN teacher te
        WHERE an.teacher_id=te.teacher_id
        GROUP BY an.teacher_id
        <if test="status=='false'">
            ORDER BY AVG(total_score)
        </if>
        <if test="status=='true'">
            ORDER BY AVG(total_score) DESC
        </if>
    </select>
    <select id="queryTeacherName" resultType="string">
        select name from teacher where teacher_id=#{teacherId}
    </select>
    <select id="queryTeacherOpinion" resultType="map">
        SELECT nickname,opinion,create_time FROM answer
        WHERE teacher_id=#{teacherId} AND opinion!='无' AND opinion!=''
            LIMIT 0,#{top}
    </select>
    <select id="queryTeacherOpinionCount" resultType="int">
        SELECT COUNT(1) FROM answer WHERE teacher_id=#{teacherId} AND opinion!='无' AND opinion!=''
    </select>
    <select id="queryTeacherAVGById" resultType="map">
        SELECT DATE_FORMAT(create_time, '%Y-%m') AS ti,AVG(total_score) AS score FROM answer
        WHERE teacher_id=#{teacherId}
          AND create_time &lt; #{createTime}
        GROUP BY DATE_FORMAT(create_time, '%Y-%m')
        LIMIT 0,3
    </select>
    <select id="queryJsonById" resultType="string">
        SELECT detail FROM answer WHERE teacher_id=#{teacherId} AND create_time LIKE CONCAT(#{mouth},'%')
    </select>
    <select id="queryPM" resultType="map">
        SELECT teacher_id,AVG(total_score) AS score FROM answer
        WHERE create_time LIKE  CONCAT(#{mouth},'%')
        GROUP BY teacher_id
        ORDER BY AVG(total_score) desc
    </select>

    <!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
    <select id="getAnswer" parameterType="Integer" resultMap="BaseResultMap">
        SELECT * FROM answer WHERE class_id=#{cid} AND paper_id=#{pid}
    </select>
    <!--SELECT AVG(total_score) FROM answer WHERE class_id=#{cid} AND teacher_id=#{tid}-->
    <select id="avgAnswerScore" resultType="Integer">
        SELECT AVG(total_score) FROM answer WHERE
        paper_id=#{pid}
        AND class_id=#{cid}
        <if test="minCount==1 and maxCount==1">
            AND total_score!=(SELECT MIN(total_score) FROM answer WHERE paper_id=#{pid} AND class_id=#{cid})
            AND total_score!=(SELECT MAX(total_score) FROM answer WHERE paper_id=#{pid} AND class_id=#{cid})
        </if>
    </select>

    <select id="getAnswerDetail" parameterType="int" resultMap="BaseResultMap">
        select * from answer where answer_id=#{aid}
    </select>

    <select id="maxScoreCount" resultType="Integer">
        SELECT COUNT(*) FROM answer WHERE
            paper_id=#{pid}
                                      AND class_id=#{cid}
                                      AND total_score=(SELECT MAX(total_score) FROM answer where paper_id=#{pid} AND class_id=#{cid})
    </select>

    <select id="minScoreCount" resultType="Integer">
        SELECT COUNT(*) FROM answer WHERE
            paper_id=#{pid}
                                      AND class_id=#{cid}
                                      AND total_score=(SELECT MIN(total_score) FROM answer where paper_id=#{pid} AND class_id=#{cid})
    </select>

</mapper>